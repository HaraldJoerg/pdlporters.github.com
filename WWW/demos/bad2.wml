#include '$(PDLROOT)/templates/header.wml'
<lang:star:slice: bad2_*.html>

<comment> ---------------------------------------------------------- </comment>
<HEAD*>
<META* HTTP-EQUIV = "KEYWORDS" 
       CONTENT    = "Schwebel"
>
<META* NAME       = "DESCRIPTION" 
       CONTENT    = "Robert Schwebel"
>
<TITLE*>PDL - Screenshots / Demos</TITLE*>
</HEAD*>
<comment> ---------------------------------------------------------- </comment>

<set-var doctype=html>

#include '$(PDLROOT)/templates/top.wml'
#include '$(PDLROOT)/menue.wml'

<!-- ---------------------------------------------------------------------- -->

<HR>

<EN><H2> Graphical tour of the bad value support in PDL </H2></EN>
<DE><H2> Einige praktische Beispiele zu "bad values" und PGPLOT </H2></DE>

<en-p>
This demo is just a bit of eye-candy to show bad values in action,
and requires PGPLOT support in PDL. It makes use of the image of
m51 kindly provided by the IRAF group at the National Optical and 
Astronomical Observatories.
</en-p>

<de-p>
Diese Demo soll die "bad values"-Funktionen anhand einiger graphischer Beispiele
vorführen. Zum Ausprobieren muß der Support für PGPLOT in PDL eincompiliert
sein. Verwendet wird weiterhin das M51-Bild, welches freundlicherweise von der
IRAF-Gruppa am National Optical and Astronomical Observatory zur Verfügung
gestellt wurde.
</de-p>

<!-- ----- -->

<en-p>
It also serves to demonstrate that you often don't need to change
your code to handle bad values, as the routines may 'do it' for you.
</en-p>

<de-p>
Dieses Beispiel zeigt weiterhin, daß in vielen Fällen der Code nicht verändert
werden muß, um "bad values" zu unterstützen.
</de-p>
    
<PRE>
<CODE>
<FONT COLOR="RED"># read in the image ($m51path has been set up by this demo to </FONT>
<FONT COLOR="RED"># contain the location of the file)</FONT>
<STRONG>perldl></STRONG> $m51 = rfits "$m51path/m51.fits";
<FONT COLOR="RED"># display it</FONT>
<STRONG>perldl></STRONG> $just = { JUSTIFY => 1 };
<STRONG>perldl></STRONG> imag $m51, $just;

BITPIX = 16 size = 65536 pixels 
Reading 131072bytes
BSCALE = 1.0000000000E0 &&  BZERO = 0.0000000000E0
Displaying 256 x 256 image from 24 to 500 ...

<A HREF="bad2_1.gif"><IMG ALT="[Thumbnail]" SRC="bad2_thumb1.gif"> Output</A>

</CODE>
</PRE>

<!-- ----- -->

<PRE>
<CODE>
<FONT COLOR="RED"># now, let's mask out the central 30 pixels and display it</FONT>
<STRONG>perldl></STRONG> $masked = $m51->setbadif( $m51->rvals({CENTRE=>[128,128]}) < 30 );
<FONT COLOR="RED"># since imag auto-scales the output, the bad values are not displayed</FONT>
<STRONG>perldl></STRONG> imag $masked, $just;
<FONT COLOR="RED"># compare the statistics of the images</FONT>
<FONT COLOR="RED"># (as $PDL::verbose = 1, stats prints out the answers itself)</FONT>
<STRONG>perldl></STRONG> print "Original:\n"; $m51->stats;
<STRONG>perldl></STRONG> print "Masked:\n";   $masked->stats;

Displaying 256 x 256 image from 24 to 500 ...

<A HREF="bad2_2.gif"><IMG ALT="[Thumbnail]" SRC="bad2_thumb2.gif"> Output</A>

Original:
Mean = 104.193572998047, RMS = 67.4254208960541, Median = 88
Min  = 24, Max = 500
Masked:
Mean = 96.1637598444026, RMS = 49.9066302680633, Median = 86
Min  = 24, Max = 500
</CODE>
</PRE>

<!-- ----- -->

<PRE>
<CODE>
<FONT COLOR="RED"># let's filter it a little bit</FONT>
<STRONG>perldl></STRONG> use PDL::Image2D;
<STRONG>perldl></STRONG> $nb = 9;
<STRONG>perldl></STRONG> $filtered = med2d $masked, ones($nb,$nb), { Boundary => 'Truncate' };
<FONT COLOR="RED"># this is a model of the diffuse component of m51</FONT>
<STRONG>perldl></STRONG> imag $filtered, $just;

Displaying 256 x 256 image from 38 to 313 ...

<A HREF="bad2_3.gif"><IMG ALT="[Thumbnail]" SRC="bad2_thumb3.gif"> Output</A>

</CODE>
</PRE>

<!-- ----- -->

<PRE>
<CODE>
<FONT COLOR="RED"># unsharp masking, to bring out the small-scale detail</FONT>
<STRONG>perldl></STRONG> $unsharp = $masked - $filtered;
<STRONG>perldl></STRONG> imag $unsharp, $just;

Displaying 256 x 256 image from -64 to 459 ...

<A HREF="bad2_4.gif"><IMG ALT="[Thumbnail]" SRC="bad2_thumb4.gif"> Output</A>

</CODE>
</PRE>

<!-- ----- -->

<PRE>
<CODE>
<FONT COLOR="RED"># add on some contours showing the large scale structure of the galaxy</FONT>
<STRONG>perldl></STRONG> imag $unsharp, $just;
<STRONG>perldl></STRONG> hold;
<STRONG>perldl></STRONG> cont $filtered;
<STRONG>perldl></STRONG> rel;

Displaying 256 x 256 image from -64 to 459 ...
Graphics on HOLD
Contouring 256 x 256 image from 38 to 313 in 9 steps
Graphics RELEASED

<A HREF="bad2_5.gif"><IMG ALT="[Thumbnail]" SRC="bad2_thumb5.gif"> Output</A>

</CODE>
</PRE>

<!-- ---------------------------------------------------------------------- -->

#include "$(PDLROOT)/templates/footer_db.wml"
#include "$(PDLROOT)/templates/bottom.wml"
