<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://pdl.perl.org/advent/blog/tag/plotting/</id>
    <title>PDL Advent calendar 2024</title>
    <updated>2024-12-07T00:00:00Z</updated>
    <link href="https://pdl.perl.org/advent/blog/tag/plotting.atom" rel="self" />
    <link href="https://pdl.perl.org/advent/blog/tag/plotting/" rel="alternate" />
    <generator version="0.098">Statocles</generator>

    <entry>
        <id>https://pdl.perl.org/advent/blog/2024/12/07/finance2/</id>
        <title>Day 7: Plotting PDL data in the browser using Javascript</title>
        <author><name>Vikas N Kumar</name></author>
        <link href="https://pdl.perl.org/advent/blog/2024/12/07/finance2/" rel="alternate" />
        <content type="html"><![CDATA[
            <h2>Introduction</h2>

<p>In a <a href="https://pdl.perl.org/advent/blog/2024/12/07/finance2/../../06/finance/">previous post</a> we
saw how to create a trading strategy using
<a href="https://metacpan.org/pod/PDL::Finance::TA">PDL::Finance::TA</a> and
<a href="https://metacpan.org/pod/PDL">PDL</a> with Perl.</p>

<p>You may have noticed that I used
<a href="https://metacpan.org/pod/PDL::Graphics::Gnuplot">PDL::Graphics::Gnuplot</a> to do
the plotting there.  This module requires the user to install Gnuplot on their
desktop or server, which may be a limitation in some use cases.</p>

                <p><a href="https://pdl.perl.org/advent/blog/2024/12/07/finance2/#section-2">Continue reading...</a></p>

                <p>Tags:
                    <a href="https://pdl.perl.org/advent/blog/tag/finance/">finance</a>
                    <a href="https://pdl.perl.org/advent/blog/tag/plotting/">plotting</a>
                </p>

        ]]></content>
        <updated>2024-12-07T00:00:00Z</updated>
        <category term="finance" />
        <category term="plotting" />
    </entry>
</feed>

